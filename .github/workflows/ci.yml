name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm run test:coverage

      - name: Build project
        run: npm run build

      - name: Upload coverage to Codecov
        if: matrix.node-version == '20.x'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  build-check:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Check build outputs
        run: |
          if [ ! -f "dist/index.js" ]; then
            echo "빌드된 index.js 파일이 없습니다!"
            exit 1
          fi
          if [ ! -f "dist/index.d.ts" ]; then
            echo "빌드된 타입 정의 파일이 없습니다!"
            exit 1
          fi
          echo "빌드가 성공적으로 완료되었습니다!"

      - name: Test installation
        run: |
          npm pack
          PACKAGE_NAME=$(npm pack --dry-run 2>&1 | tail -1)
          npm install -g $PACKAGE_NAME


